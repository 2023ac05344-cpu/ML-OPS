services:
  mlops-api:
    build: .
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
      - ./data:/app/data
      - ./mlflow.db:/app/mlflow.db
    environment:
      - PYTHONPATH=/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    network_mode: host

  # MLflow for experiment tracking
  mlflow:
    image: bitnami/mlflow:3
    container_name: mlflow
    ports:
      - "5000:5000"
    volumes:
      - ./mlflow.db:/mlflow-data/mlflow.db
      - ./mlruns:/mlflow-artifacts
    entrypoint: [ "mlflow" ]
    command:
      - server
      - --host=0.0.0.0
      - --port=5000
      - --backend-store-uri=sqlite:////mlflow-data/mlflow.db
      - --default-artifact-root=/mlflow-artifacts
    restart: unless-stopped
    network_mode: host


  # Optional: Add Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - mlops-api
    restart: unless-stopped
    network_mode: host

  # Optional: Add Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    network_mode: host

volumes:
  grafana-storage: